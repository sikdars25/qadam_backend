# Groq API Configuration (FREE - Recommended!)
# Groq provides free API access with Llama 3 models
# Much faster than OpenAI and completely free!
# Get your API key from: https://console.groq.com
GROQ_API_KEY=your_groq_api_key_here

# Note: The system uses Groq with Llama 3.1 for solution generation
# - Free tier: 30 requests/minute
# - Very fast responses (< 1 second)
# - No credit card required
# 
# Semantic search and chapter mapping work without an API key.

# SMS API Configuration (Optional - For Indian Phone Numbers)
# Fast2SMS provides free SMS service for Indian numbers
# Get your API key from: https://www.fast2sms.com
# Free tier: 50 SMS/day
FAST2SMS_API_KEY=your_fast2sms_api_key_here

# Email Configuration (Required for Account Activation)
# SMTP settings for Gmail
# For Gmail: Use App Password (not regular password)
# Steps:
# 1. Enable 2-Step Verification: https://myaccount.google.com/security
# 2. Generate App Password: https://myaccount.google.com/apppasswords
SMTP_SERVER=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your_email@gmail.com
SMTP_PASSWORD=your_gmail_app_password_here

# MySQL Database Configuration (Required)
# Configure your MySQL database connection
# For local development: Use localhost
# For Azure: Use Azure Database for MySQL connection string
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_USER=root
MYSQL_PASSWORD=your_mysql_password_here
MYSQL_DATABASE=qadam_academic

# Azure Database for MySQL Example:
# MYSQL_HOST=qadam-mysql-server.mysql.database.azure.com
# MYSQL_USER=adminuser@qadam-mysql-server
# MYSQL_PASSWORD=your_secure_password
# MYSQL_DATABASE=qadam_academic

# Frontend URL Configuration (Required for CORS)
# For local development: http://localhost:3000
# For Azure: Your Static Web App URL
FRONTEND_URL=http://localhost:3000

# Azure Production Example:
# FRONTEND_URL=https://your-app.azurestaticapps.net

# Secret Key for Session Management (Required)
# Generate a random secure string for production
SECRET_KEY=your-secret-key-here-change-in-production

# Vector Storage
# The system uses local FAISS for vector storage (textbook chapter embeddings)
# FAISS indices are stored in: vector_indices/{textbook_id}/
# No additional configuration needed - works out of the box!
